@model Game.GUI.ViewModels.Message.MessageViewModel
@using PagedList.Mvc;
@{
    Layout = null;
}
<div class="receivedMessage" id="receivedMessage">
    @if (!Model.pagedList.Any())
    {
        <span class="noRow">Brak wiadomości</span>
    }
    else
    {
        <table class="bordered centered">
            <thead>
                <tr>
                    <th>Nadawca</th>
                    <th>Temat</th>
                    <th>Data wysłania</th>
                    <th></th>
                </tr>
            </thead>

            <tbody id="receivedMessage">
                @foreach (var item in Model.pagedList)
                {
                    if (item.IfRead == false)
                    {
                        <tr id="newMessage">
                            <td>@Html.DisplayFor(modelItem => item.Sender_Login)</td>
                            <td class="toContent" data-position="bottom" data-delay="50" data-tooltip="@item.Theme" onclick="location.href='@Url.Action("Content", "Message", new { MessageID = @item.ID })'">@Html.DisplayFor(modelItem => item.Theme)</td>
                            <td>@Html.DisplayFor(modelItem => item.PostDate)</td>
                            <td><button class="deleteM deleteRM" data-messageID="@item.ID"><i class="fa fa-trash"></i></button></td>
                        </tr>
                    }
                    else if (item.IfRead == true)
                    {
                        <tr style="font-weight: normal">
                            <td>@Html.DisplayFor(modelItem => item.Sender_Login)</td>
                            <td class="toContent" data-position="bottom" data-delay="50" data-tooltip="@item.Theme" onclick="location.href='@Url.Action("Content", "Message", new { MessageID = @item.ID })'">@Html.DisplayFor(modelItem => item.Theme)</td>
                            <td>@Html.DisplayFor(modelItem => item.PostDate)</td>
                            <td><button class="deleteM deleteRM" data-messageID="@item.ID"><i class="fa fa-trash"></i></button></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        <div class="paginationBtn" id="paginationBtnReceived">
            @Html.PagedListPager(Model.pagedList, Page_No => Url.Action("_ReceivedMessage", new { Page_No }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "receivedMessage" }))
        </div>
    }
</div>
<script>

    function initR(){
        $('.toContent').tooltip({delay: 50});

        $(".deleteRM").click(function(){
            console.log($(this).data('messageid'));
            $.ajax({
                type: "POST",
                url: 'Message/DeleteRMessage',
                data: {a: $(this).data('messageid') },
                success: function (data) {
                    $("#receivedMessage").html($(data).html());
                    initR();
                }
            });
        });


        $('#paginationBtnReceived').on('click', 'a', function (e) {
            if (!$(this).parents("li:first").hasClass("disabled"))
            {
                e.preventDefault();
                if (!$(this).parents("li:first").hasClass("active")) {
                    $.ajax({
                        url: this.href,
                        type: 'GET',
                        cache: false,
                        success: function (result) {
                            $('#receivedMessage').html(result);
                        }
                    });
                }
            }
        });
    }
    $(document).ready(function(){
        initR();
    });
</script>
