@model Game.GUI.ViewModels.Building.QueueBuilding.QueueViewModel
@using PagedList.Mvc
@{
    Layout = null;
}

<div id="queueAdd" class="modal">
    <div class="modal-content">
        @using (Html.BeginForm("AddQueue", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.ID, new { @placeholder = "", @class = "validate inputID" })
                <label for="ID">ID</label>
            </div>
            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.User_Login, new { placeholder = "", @class = "validate" })
                <label for="User_Login">Login</label>
            </div>

            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.UserBuilding_ID, new { placeholder = "", @class = "validate" })
                <label for="UserBuilding_ID">ID budynku użytkownika</label>
            </div>

            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.Second, new { placeholder = "", @class = "validate" })
                <label for="Value">Czas budowy(s)</label>
            </div>

            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.NewStatus, new { placeholder = "", @class = "validate" })
                <label for="NewStatus">Nowy status</label>
            </div>
            <input type="submit" value="Zapisz" class="btn addButton" name="action" />
        }
    </div>
</div>

<div id="queueUpdate" class="modal">
    <div class="modal-content">
        @using (Html.BeginForm("UpdateQueue", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {

            @Html.HiddenFor(m => m.viewModel.ID, new { placeholder = "", @class = "validate inputID" })
            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.User_Login, new { @placeholder = "", @class = "validate inputLogin" })
                <label for="Login">Login</label>
            </div>

            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.UserBuilding_ID, new { @placeholder = "", @class = "validate inputUserBuilding_ID" })
                <label for="UserBuilding_ID">ID budynku użytkownika</label>
            </div>

            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.Second, new { placeholder = "", @class = "validate inputValue" })
                <label for="Value">Czas budowy(s)</label>
            </div>

            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.NewStatus, new { placeholder = "", @class = "validate inputNewStatus" })
                <label for="NewStatus">Nowy status</label>
            </div>
                <input type="submit" value="Zapisz" class="btn addButton" name="action" />
        }
    </div>
</div>

<div class="tableList" id="queueAdmin">
    <h4>Kolejka budowania</h4><input type="text" id="queueSearch" class="searchAdmin" placeholder="Szukaj..." /><br />
    <button data-target="queueAdd" class="btn modal-trigger queueAdd">Dodaj budynek</button>
    <table class="highlight bordered responsive-table centered">
        <thead>
            <tr>
                <th>ID</th>
                <th>Login</th>
                <th>ID budynku użytkownika</th>
                <th>Budynek</th>
                <th>Czas końca budowy</th>
                <th>Nowy status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.listModel)
            {
                <tr>
                    <td>@item.ID</td>
                    <td>@item.User_Login</td>
                    <td>@item.UserBuilding_ID</td>
                    <td class="search">@item.BuildingName</td>
                    <td>@item.FinishDate</td>
                    <td>@item.NewStatus</td>
                    <td>
                        <div class="fixed-action-btn horizontal" style="position: relative; top: 5px; float: right">
                            <button class="btn-floating btn-large red">
                                <i class="fa fa-align-justify #00695c teal darken-5"></i>
                            </button>
                            <ul>
                                <li><button data-target="queueAdd" class="btn-floating #00695c teal darken-3 modal-trigger queueAdd" onclick="updaterow(['inputID','inputLogin','inputUserBuilding_ID','inputValue','inputNewStatus'], ['@item.ID','@item.User_Login','@item.UserBuilding_ID','@item.Second','@item.NewStatus'])"><i class="fa fa-pencil"></i></button></li>
                                <li><button class="btn-floating #00695c teal darken-3" onclick="location.href='@Url.Action("DeleteQueue", "Admin", new { id = item.ID })'"><i class="fa fa-trash-o"></i></button></li>
                            </ul>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script src="~/Scripts/jquery-2.1.4.min.js"></script>
<script src="~/Scripts/js/jquery.slimscroll.min.js"></script>
<script src="~/Scripts/js/UpdateRow.js"></script>
<script>
    $('#queueAdmin').slimScroll({
        size: '10px',
        height: '600px',
        alwaysVisible: true
    });
    $(document).ready(function () {
        $('.queueAdd').leanModal();
        $('.queueUpdate').leanModal();
    });
</script>
