@model Game.GUI.ViewModels.Product.ProductViewModel
@{
    Layout = null;
}

<div id="productAdd" class="modal">
    <div class="modal-content">
        @using (Html.BeginForm("AddProduct", "Admin", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {

            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.ProductName, new { placeholder = "", @class = "validate" })
                <label for="Name">Nazwa produktu</label>
            </div>

            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.Price_per_unit, new { placeholder = "", @class = "validate" })
                <label for="Price_per_unit">Cena za sztukę</label>
            </div>

            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.Unit, new { placeholder = "", @class = "validate" })
                <label for="Unit">Jednostka</label>
            </div>

            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.Alias, new { placeholder = "", @class = "validate" })
                <label for="Alias">Alias</label>
            </div>

            <input type="submit" value="Zapisz" class="btn addButton" name="action" />

        }
    </div>
</div>

<div id="productUpdate" class="modal">
    <div class="modal-content">
        @using (Html.BeginForm("UpdateProduct", "Admin", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.HiddenFor(m => m.viewModel.ID, new { placeholder = "", @class = "validate inputID" })

            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.ProductName, new { placeholder = "", @class = "validate inputName" })
                <label for="Name">Nazwa produktu</label>
            </div>

            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.Price_per_unit, new { placeholder = "", @class = "validate inputPrice_per_unit" })
                <label for="Price_per_unit">Cena za sztukę</label>
            </div>

            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.Unit, new { placeholder = "", @class = "validate inputUnit" })
                <label for="Unit">Jednostka</label>
            </div>

            <div class="input-field col s12">
                @Html.TextBoxFor(m => m.viewModel.Alias, new { placeholder = "", @class = "validate inputAlias" })
                <label for="Alias">Alias</label>
            </div>

            <input type="submit" value="Zapisz" class="btn addButton" name="action" />

        }
    </div>
</div>

<div class="tableList" id="productsAdmin">
    <h4>Produkty</h4><input type="text" id="productSearch" class="searchAdmin" placeholder="Nazwa produktu..." /><br />
    <button data-target="productAdd" class="btn modal-trigger productAdd">Dodaj produkt</button>
    <table class="highlight bordered responsive-table centered">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nazwa</th>
                <th>Wartość jednostki</th>
                <th>Jednostka</th>
                <th>Alias</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.listModel)
            {
                <tr>
                    <td>@item.ID</td>
                    <td class="search">@item.ProductName</td>
                    <td>@item.Price_per_unit</td>
                    <td>@item.Unit</td>
                    <td>@item.Alias</td>
                    <td>
                        <div class="fixed-action-btn horizontal" style="position: relative; top: 5px; float: right">
                            <button class="btn-floating btn-large red">
                                <i class="fa fa-align-justify #00695c teal darken-5"></i>
                            </button>
                            <ul>
                                <li><button data-target="productUpdate" class="btn-floating #00695c teal darken-3 modal-trigger productUpdate" onclick="updaterow(['inputID','inputName','inputPrice_per_unit','inputUnit','inputAlias'],
                                             ['@item.ID','@item.ProductName','@item.Price_per_unit','@item.Unit','@item.Alias'])"><i class="fa fa-pencil"></i></button></li>
                                <li><button class="btn-floating #00695c teal darken-3" onclick="location.href='@Url.Action("DeleteProduct", "Admin", new { id = item.ID })'"><i class="fa fa-trash-o"></i></button></li>
                            </ul>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script src="~/Scripts/jquery-2.1.4.min.js"></script>
<script src="~/Scripts/js/jquery.slimscroll.min.js"></script>
<script src="~/Scripts/js/UpdateRow.js"></script>
<script>
    $('#productsAdmin').slimScroll({
        size: '10px',
        height: '600px',
        alwaysVisible: true
    });
    $(document).ready(function () {
    // the "href" attribute of .modal-trigger must specify the modal ID that wants to be triggered
        $('.productAdd').leanModal();
        $('.productUpdate').leanModal();
});</script>
